"use strict";angular.module("tripinApp").factory("AuthenticationService",["Base64","$http","$cookieStore","$rootScope","$timeout","env","$q",function(Base64,$http,$cookieStore,$rootScope,$timeout,env,$q){function handleSuccess(response){return response.data}function handleError(response){if(!angular.isObject(response.data)||!response.data.message)return $q.reject("An unknown error occured.")}var service={};return service.Login=function(username,password){return $http({method:"POST",url:env.TRIPINAPIURL+"authenticate",data:{username:username,password:password},headers:{"Content-Type":"application/json"}}).then(handleSuccess,handleError)},service.SetCredentials=function(credentials){delete credentials.user.password,$rootScope.globals={currentUser:credentials.user,token:credentials.token},$http.defaults.headers.common["x-access-token"]=credentials.token,$cookieStore.put("globals",$rootScope.globals)},service.ClearCredentials=function(){$rootScope.globals={},$cookieStore.remove("globals"),$http.defaults.headers.common.Authorization="Basic "},service}]).factory("Base64",function(){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return{encode:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;do{chr1=input.charCodeAt(i++),chr2=input.charCodeAt(i++),chr3=input.charCodeAt(i++),enc1=chr1>>2,enc2=(3&chr1)<<4|chr2>>4,enc3=(15&chr2)<<2|chr3>>6,enc4=63&chr3,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4),chr1=chr2=chr3="",enc1=enc2=enc3=enc4=""}while(i<input.length);return output},decode:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;/[^A-Za-z0-9\+\/\=]/g.exec(input)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{enc1=keyStr.indexOf(input.charAt(i++)),enc2=keyStr.indexOf(input.charAt(i++)),enc3=keyStr.indexOf(input.charAt(i++)),enc4=keyStr.indexOf(input.charAt(i++)),chr1=enc1<<2|enc2>>4,chr2=(15&enc2)<<4|enc3>>2,chr3=(3&enc3)<<6|enc4,output+=String.fromCharCode(chr1),64!=enc3&&(output+=String.fromCharCode(chr2)),64!=enc4&&(output+=String.fromCharCode(chr3)),chr1=chr2=chr3="",enc1=enc2=enc3=enc4=""}while(i<input.length);return output}}});